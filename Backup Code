{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"7o81NDmJ4_mi"},"outputs":[],"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import roc_curve, auc, confusion_matrix, classification_report\n","\n","df['BinaryLevel'] = np.where(df['Level'] > 1, 1, 0)\n","\n","train_df, test_df = train_test_split(df, test_size=0.2, random_state=42)\n","\n","features = ['Age', 'Smoking', 'Air Pollution']\n","\n","model = LogisticRegression()\n","model.fit(train_df[features], train_df['BinaryLevel'])\n","\n","probs = model.predict_proba(test_df[features])[:, 1]\n","\n","# Compute ROC curve\n","fpr, tpr, thresholds = roc_curve(test_df['BinaryLevel'], probs)\n","\n","# Compute area under the curve (AUC)\n","roc_auc = auc(fpr, tpr)\n","\n","# Plot ROC curve\n","plt.figure(figsize=(10, 6))\n","plt.plot(fpr, tpr, color='darkorange', lw=2, label=f'AUC = {roc_auc:.2f}')\n","plt.plot([0, 1], [0, 1], color='navy', lw=2, linestyle='--')\n","plt.xlabel('False Positive Rate (1 - Specificity)')\n","plt.ylabel('True Positive Rate (Sensitivity)')\n","plt.title('Receiver Operating Characteristic (ROC) Curve')\n","plt.legend(loc='lower right')\n","plt.show()\n"]},{"cell_type":"code","source":["import pandas as pd\n","from sklearn.linear_model import LinearRegression\n","from sklearn.metrics import roc_curve, auc\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import label_binarize\n","import matplotlib.pyplot as plt\n","\n","# Assign weights\n","weights = {'Smoking': 0.8, 'Age': 0.7, 'Air Pollution': 0.5}\n","weighted_features = []\n","\n","df['Smoking_binary'] = df['Smoking'].apply(lambda x: 1 if x == 'Yes' else 0)\n","\n","X = df[['Smoking', 'Age', 'Air Pollution']]\n","y = df['Smoking_binary']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","model = LinearRegression()\n","model.fit(X_train, y_train)\n","y_pred = model.predict(X_test)\n","\n","# ROC Curve\n","fpr, tpr, thresholds = roc_curve(y_test, y_pred)\n","roc_auc = auc(fpr, tpr)\n","\n","plt.title('ROC Curve')\n","plt.plot(fpr, tpr, 'b', label='AUC = %0.2f' % roc_auc)\n","plt.legend(loc='lower right')\n","plt.plot([0, 1], [0, 1], 'r--')\n","plt.xlim([0, 1])\n","plt.ylim([0, 1])\n","plt.ylabel('True Positive Rate')\n","plt.xlabel('False Positive Rate')\n","plt.show()\n"],"metadata":{"id":"v4QlgfBG5M1j"},"execution_count":null,"outputs":[]}]}
